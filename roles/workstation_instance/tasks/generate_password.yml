
- name: Generate random password
  shell: dd 2>/dev/null if=/dev/random bs={{ length }} count=1 | base64 | head -1 | cut -c -{{ length }}
  register: result
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: existing_password == ""

- name: set generated_password
  set_fact:
    generated_password: "{{ result.stdout | trim }}"
  when: existing_password == ""

- name: set generated_password
  set_fact:
    generated_password: "{{ existing_password }}"
  when: existing_password != ""

- name: Ensure secrets vault exists
  file: 
    path: "{{ vault_file }}"
    state: touch
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: vault_file | length > 0

- name: Read secrets vault file
  include_vars:
    file: "{{ vault_file }}"
    name: secrets
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: vault_file | length > 0

- debug: var=generated_password

- name: add new password to secrets
  set_fact:
    secrets: "{{ secrets | combine({label: generated_password }) }}"
  when: vault_file | length > 0

- name: Update secrets vault file
  command:
    cmd: ansible-vault encrypt --output {{ vault_file }}
    stdin: "{{ secrets | to_json }}"
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: vault_file | length > 0

- name: ensure valid os_name
  assert:
    that:
      - os_name in ['openbsd', 'debian']

- name: hash password for openbsd
  command: 
    cmd: "encrypt -ba"
    stdin: "{{ generated_password }}"
  register: openbsd_password_hash
  delegate_to: "{{ netboot_host }}"
  when: os_name == 'openbsd'

- name: set generated_hash
  set_fact:
    generated_hash: "{{ openbsd_password_hash.stdout | trim }}"
  when: os_name == 'openbsd'

- name: Hash password for debian
  command:
    cmd: openssl passwd -6 -stdin
    stdin: "{{ generated_password }}"
  register: debian_password_hash
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: os_name == 'debian'

- name: set generated_hash
  set_fact:
    generated_hash: "{{ debian_password_hash.stdout | trim }}"
  when: os_name == 'debian'
