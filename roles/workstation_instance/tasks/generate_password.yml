- name: Generate random password
  shell: dd 2>/dev/null if=/dev/random bs={{ length }} count=1 | base64 | head -1 | cut -c -{{ length }}
  register: generated_password
  delegate_to: localhost
  vars:
    ansible_connection: local
  #  no_log: true
  
- name: Ensure secrets vault exists
  file: 
    path: "{{ vault_file }}"
    state: touch
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: vault_file | length > 0

- name: Read secrets vault file
  include_vars:
    file: "{{ vault_file }}"
    name: secrets
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: vault_file | length > 0
  #no_log: true

- name: add new password to secrets
  set_fact:
    secrets: "{{ secrets | combine({label: generated_password.stdout | trim }) }}"
  when: vault_file | length > 0
  #no_log: true

- name: Update secrets vault file
  command:
    cmd: ansible-vault encrypt --output {{ vault_file }}
    stdin: "{{ secrets | to_json }}"
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: vault_file | length > 0
  #no_log: true
