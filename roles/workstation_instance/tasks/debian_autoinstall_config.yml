
- name: Add openssh-server to debian netboot_auto_packages
  set_fact:
    netboot_auto_packages: "{{ netboot_auto_packages | combine({ 'debian': (netboot_auto_packages.debian + ['openssh-server']) }) }}"
  when: vm_sshd_enabled

- name: Remove systemd 
  set_fact:
    netboot_auto_packages: "{{ netboot_auto_packages | combine({ 'debian': (['sysvinit-core', 'libpam-elogind'] + netboot_auto_packages.debian) }) }}"
  when: netboot_remove_systemd

- name: Verify disk encryption passphrase
  assert:
    that:
      - vm_fde_passphrase is defined
      - vm_fde_password | length > vm_fde_passphrase_minimum_length
    fail_msg: "vm_fde_passphrase must be provided as a vaulted variable"
  when: vm_fde_enabled and (vm_fde_mode == 'p')

- name: Hash user password 
  command:
    cmd: openssl passwd -6 -stdin
    stdin: "{{ vm_password }}"
  register: user_password_hash
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: Generate root password
  include_tasks: generate_password.yml
  vars:
    label: "{{ vm_hostname }}_root"
    length: "{{ vm_password_length }}"
    vault_file: "{{ vm_secrets_file }}"

- name: Hash root password
  command: 
    cmd: openssl passwd -6 -stdin
    stdin: "{{ generated_password.stdout | trim }}"
  register: root_password_hash
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: Generate FDE password
  include_tasks: generate_password.yml
  vars:
    label: "{{ vm_hostname }}_disk"
    length: "{{ vm_fde_password_length }}"
    vault_file: "{{ vm_secrets_file }}"
  when: vm_fde_enabled

- name: create config staging dir
  tempfile:
    state: directory
  register: config_staging
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: generate site_package tarball in staging dir
  include_tasks: "generate_site_package.yml"
  vars:
    filename: "{{ instance_info.mac }}-package.tgz"
    build_dir: "{{ config_staging.path }}"

- name: generate preseed file in staging dir
  template:
    src: debian_preseed.j2
    dest: "{{ config_staging.path }}/preseed.conf"
    mode: '0644'
    force: true
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: upload configuration to netboot host
  command:
    cmd: "nbctl add {{ instance_info.mac }} debian preseed.conf {{ instance_info.mac }}-package.tgz"
    chdir: "{{ config_staging.path }}"
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: cleanup config staging dir
  file:
    path: "{{ config_staging.path }}"
    state: absent
  delegate_to: localhost
  vars:
    ansible_connection: local

