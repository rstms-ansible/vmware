
- name: report install os
  debug: 
    msg: "os={{ vm_os }} version={{ vm_os_version }}"

- name: Configure netboot
  include_tasks:
    file: netboot_config.yml
    apply: 
      delegate_to: "{{ netboot_host }}"
      become: true
      become_method: doas

- name: Configure OS autoinstall
  include_tasks:
    file: "{{ vm_os | lower }}_autoinstall_config.yml"
    apply: 
      delegate_to: "{{ netboot_host }}"
      become: true
      become_method: doas

- name: create client cert
  command: "mkcert -d 1h vmctl --cert-file /tmp/vmctl.pem --key-file /tmp/vmctl.key"
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: Start netboot installation
  command: "vmctl --client-cert /tmp/vmctl.pem --client-key /tmp/vmctl.key start --iso {{ netboot_iso }} --connect {{ '--fullscreen ' if netboot_fullscreen else ''}} {{ '--gui ' if netboot_gui else ''}}{{ vm_hostname }}"
  delegate_to: localhost
  vars:
    ansible_connection: local
  when: netboot_wait

- name: delete client certs
  shell: rm /tmp/vmctl.pem /tmp/vmctl.key
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: Wait for netboot installation complete
  include_tasks:
    file: netboot_wait.yml
    apply: 
      delegate_to: "{{ netboot_host }}"
      become: true
      become_method: doas
  when: netboot_wait

- name: Cleanup OS autoinstall
  include_tasks:
    file: "{{ vm_os | lower }}_autoinstall_cleanup.yml"
    apply:
      delegate_to: "{{ netboot_host }}"
      become: true
      become_method: doas
  when: netboot_wait

- name: Cleanup netboot
  include_tasks:
    file: netboot_cleanup.yml
    apply: 
      delegate_to: "{{ netboot_host }}"
      become: true
      become_method: doas
  when: netboot_wait
