
- name: Create temp directory for building site package
  command: mktemp -d
  register: result

- name: set package_build_dir
  set_fact:
    package_build_dir: "{{ result.stdout | trim }}"

- name: Copy vm_filesystem_dir files to site package 
  copy: 
    src: "{{ vm_filesystem_dir }}/"
    dest: "{{ package_build_dir }}"
    owner: root
    group: wheel
    mode: preserve
  when: vm_filesystem_dir

- name: Check for install.site in install_filesystem
  stat: 
    path: "{{ package_build_dir }}/install.site"
  register: uploaded_install_site

- name: Read uploaded install.site content
  slurp:
    path: "{{ package_build_dir }}/install.site"
  when: uploaded_install_site.stat.exists
  register: install_site_commands

- name: Write install.site script
  template:
    src: install.site.j2
    dest: "{{ package_build_dir }}/install.site"
    mode: "0700"
    owner: root
    group: wheel

- name: Append uploaded install.site commands
  lineinfile:
    path: "{{ package_build_dir }}/install.site"
    line: "{{ install_site_commands.content | b64decode }}"
    state: present
  when: uploaded_install_site.stat.exists

- name: Generate site package tarball
  command:
    cmd: "tar -czvhf {{ install_package_dir }}/{{ install_package_filename }} ."
    chdir: "{{ package_build_dir }}"

#- name: debugging fetch package tarball
#  fetch: 
#    src: "{{ install_package_dir }}/{{ install_package_filename }}"
#    dest: "{{ playbook_dir }}/"
#    flat: true

- name: Cleanup temp directory
  file:
    path: "{{ package_build_dir }}"
    state: absent

- name: Set site package tarball permissions
  file: 
    path: "{{ install_package_dir }}/{{ install_package_filename }}"
    owner: root
    group: www
    mode: "0644"

- name: Rewrite package index
  shell:
    cmd: "ls -lT >index.txt"
    chdir: "{{ install_package_dir }}"

