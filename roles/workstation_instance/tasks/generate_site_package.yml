
- name: create package build dir
  file:
    path: "{{ build_dir }}/pkg"
    state: "directory"
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: Copy vm_filesystem_dir files to site package 
  copy: 
    src: "{{ vm_filesystem_dir }}/"
    dest: "{{ build_dir }}/pkg"
    owner: root
    group: 0
    mode: preserve
  when: vm_filesystem_dir | length > 0
  become: true
  delegate_to: localhost
  vars:
    ansible_connection: local

# on openbsd, add postinstall template to install.site, creating if necessary
- name: append postinstall script to install.site
  blockinfile:
    path: "{{ build_dir }}/pkg/install.site"
    create: true
    block: "{{ lookup('template', 'openbsd_postinstall.j2') }}"
    insertafter: EOF
    owner: root
    group: 0
    mode: 0700
  become: true
  when: os_name == 'openbsd'
  delegate_to: localhost
  vars:
    ansible_connection: local

# on debian, we need /etc in the package tree for /etc/rc.firsttime
- name: Ensure /etc directory exists in site package
  file:
    path: "{{ build_dir }}/pkg/etc"
    state: "directory"
    mode: "0755"
    owner: "root"
    group: 0
  become: true
  when: os_name == 'debian'
  delegate_to: localhost
  vars:
    ansible_connection: local

# on debian, add /etc/rc.firsttime
- name: Write firstboot script to /etc/rc.firsttime
  template:
    src: debian_rc_firsttime.j2
    dest: "{{ build_dir }}/pkg/etc/rc.firsttime"
    mode: "0700"
    owner: root
    group: 0
    force: yes
  become: true
  when: os_name == 'debian'
  delegate_to: localhost
  vars:
    ansible_connection: local

- name: Generate site package tarball
  command:
    cmd: "tar -czvhf {{ build_dir }}/{{ filename }} ."
    chdir: "{{ build_dir }}/pkg"
  delegate_to: localhost
  become: true
  vars:
    ansible_connection: local

#- name: debugging fetch package tarball
#  fetch: 
#    src: "{{ build_dir }}/{{ filename }}"
#    dest: "{{ playbook_dir }}/"
#    flat: true

- name: Cleanup temp directory
  file:
    path: "{{ build_dir }}/pkg"
    state: absent
  delegate_to: localhost
  become: true
  vars:
    ansible_connection: local

- name: Set site package tarball permissions
  file: 
    path: "{{ build_dir }}/{{ filename }}"
    mode: "0644"
    owner: "{{ lookup('env', 'USER') }}"
  delegate_to: localhost
  become: true
  vars:
    ansible_connection: local

