argument_specs:
  workstation_instance:
    short_description: a role for managing vmware workstation instances
    description: 
      - Create or Destroy a VM instance based on the value of the `vm_state` variable.
      - In a playbook using the role to create an instance, set `gather_facts` to `false` 
        since the instance will not yet exist.
      - Uses a netboot server to facilitate boot, OS install, and initial configuration.
      - A response file for the OS installer is generated and uploaded to the netboot server.
      - An install package tarball is generated to be extracted at the root directory
        after installation, but before the initial boot.  See `vm_filesystem_dir`
      - If the install package includes /install.site it is executed after the files are 
        extracted.
      - A `firstboot` script is generated during install and executed during the initial
        boot.  On Debian, this script will execute the /install.site script if present.
      - The role can optionally wait for an installation-complete message from the firstboot
        script, before deleting the generated files from the netboot server and returning.
        If the wait is disabled, another mechanism must be used to delete these files.

    author:
      - Matt Krueger <mkrueger@rstms.net>
    options:
      vm_state:
        type: "str"
        required: true
        description: 
          - "Create or Destroy a VM instance"
          - "present - create, configure, and netboot an instance, then wait for installation"
          - "absent - destroy an instance"

      vm_hostname:
        type: "str"
        required: true
        default: "inventory_hostname_short"
        description: "instance name"

      vm_username:
        type: "str"
        required: true
        default: "control system user"
        description: "instance user account"

      vm_password:
        type: "str"
        required: false
        default: "value of `ansible_become_password`"
        description: "password used when creating vm_username account"

      vm_sshd_enabled:
        type: "bool"
        required: false
        default: true
        description: "enable sshd during instance configuration"

      vm_ssh_public_key:
        type: "str"
        required: false
        default: "`ansible_user` ~/.ssh/id_ed25519.pub"
        description: "public key written to target's `~/.ssh/authorized_hosts`"

      vm_timezone:
        type: "str"
        required: false
        default: "(timezone of control system)"
        description: timezone set during instance configuration

      vm_cpu_count:
        type: "int"
        required: false
        default: 1
        description: VM CPU allocation

      vm_disk_mb:
        type: "int"
        required: false
        default: 8192
        description: Virtual Disk size in MB
    
      vm_ram_mb:
        type: "int"
        required: false
        default: 1024
        description: VM RAM allocation in MB

      vm_headless:
        type: "bool"
        required: false
        default: true
        description: selects guest OS installation of X desktop

      vm_password_length:
        type: "int"
        required: false
        default: 32
        description: length of auto-generated root password
    
      vm_filesystem_dir:
        type: "str"
        required: false
        default: ""
        description: local directory used for generation of site install package

      vm_secrets_file: 
        type: "str"
        required: false
        default: false
        description: "local filename for writing autogenerated root password with ansible-vault"

      vm_fde_enabled:
        type: "bool"
        required: false
        default: false
        description: "enable full disk encryption on VM guest"

      vm_fde_mode:
        type: "str"
        required: false
        default: "p"
        description: "disk encryption type: `p` for passphrase `d` for disk"

      vm_fde_passphrase_length:
        type: "int"
        required: false
        default: 32
        description: "disk encryption minimum passphrase length"

      vm_os:
        type: "str"
        required: false
        default: "OpenBSD"
        description: "netboot/autoinstall OS name"

      vm_os_version:
        type: "str"
        required: false
        default: "7.5"
        description: "netboot/autoinstall OS version"

      vm_os_arch:
        type: "str"
        required: false
        default: amd64
        description: "netboot/autoinstall OS architecture"

      netboot_host:
        type: "str"
        required: false
        default: netboot.rstms.net
        description: netboot server hostname

      netboot_iso:
        type: "str"
        required: false
        default: http://netboot.rstms.net/rstms-netboot.iso
        description: URL of netboot ISO

      netboot_dir:
        type: "str"
        required: false
        default:  /var/www/netboot
        description: directory on netboot host used for upload of response files and package install tarball
        
      netboot_gui:
        type: "str"
        required: false
        default:  false
        description: start VM in windowed mode during netboot

      netboot_fullscreen:
        type: "str"
        required: false
        default: false 
        description: start VM in full screen mode during netboot

      netboot_timeout:
        type: "str"
        required: false
        default: 300
        description: netboot timeout value in seconds

      netboot_wait:
        type: "bool"
        required: false
        default: true
        description: wait for completion message and clean up generated files before returning

      netboot_packages:
        default: "py3-pip"
        type: "str"
        required: false
        description: list of packages to install on first boot
